/**
 * flascc.c
 * This file exists because we need to have a consistent name in the compiled .o file.
 * View the object names with "nm flascc.o"

 * Generated by ARK2D Framework.
 */

#ifndef FLASCC_GLUE_H_
#define FLASCC_GLUE_H_

	#if defined(ARK2D_FLASCC)

		#include "ARK.h"

 		//void flascc_openInputDialog(unsigned int callbackId, string title, string defaultStr) {
 			

			/*inline_as3(
				"import com.adobe.flascc.Console;\n"\
				"Console.s_console.inputdialog();\n" 
				: : "r"(str), "r"(m_FileName.length())
			);*/

 			//Alert.show("Please re-enter your Information.", "Your Username/Password was incorrect", Alert.OK, _parent, wrongpassword);
 		//}

	 	void flascc_tick() {
			ARK2D::getContainer()->m_platformSpecific.doTick();
		}

		const char* flascc_logstr;
		void flascc_log() {
			ARK2D::getLog()->v(flascc_logstr);
			free((void*) flascc_logstr);
		}
		void flascc_log2(string str) {
			ARK2D::getLog()->v(str);
		}

		void flascc_event_mouseDown(int button, int x, int y) {
			GameContainer* container = ARK2D::getContainer();

			float thisx = (float) x;
			float thisy = (float) y;
			thisx -= container->getTranslateX();
			thisy -= container->getTranslateY();

			thisx /= container->getScale();
			thisy /= container->getScale();

			unsigned int key = Input::MOUSE_BUTTON_LEFT;
			if (button == 0) {
				key = Input::MOUSE_BUTTON_LEFT;
			} else if (button == 1) {
				key = Input::MOUSE_BUTTON_RIGHT;
			}

			Input* i = ARK2D::getInput();
			i->mouse_x = (int) thisx;
			i->mouse_y = (int) thisy;
			i->pressKey(key);
		}

		void flascc_event_mouseMoved(int x, int y) {
			GameContainer* container = ARK2D::getContainer();

			float thisx = (float) x;
			float thisy = (float) y;
			
			thisx -= container->getTranslateX();
			thisy -= container->getTranslateY();

			thisx /= container->getScale();
			thisy /= container->getScale();

			Input* i = ARK2D::getInput();
			ARK2D::getLog()->mouseMoved((int) thisx, (int) thisy, i->mouse_x, i->mouse_y);
			ARK2D::getGame()->mouseMoved((int) thisx, (int) thisy, i->mouse_x, i->mouse_y);
			i->mouse_x = (int) thisx;
			i->mouse_y = (int) thisy;
		}

		void flascc_event_mouseUp(int button, int x, int y) {
			GameContainer* container = ARK2D::getContainer();

			float thisx = (float) x;
			float thisy = (float) y;
			thisx -= container->getTranslateX();
			thisy -= container->getTranslateY();

			thisx /= container->getScale();
			thisy /= container->getScale();

			unsigned int key = Input::MOUSE_BUTTON_LEFT;
			if (button == 0) {
				key = Input::MOUSE_BUTTON_LEFT;
			} else if (button == 1) {
				key = Input::MOUSE_BUTTON_RIGHT;
			}

			Input* i = ARK2D::getInput();
			i->mouse_x = (int) thisx;
			i->mouse_y = (int) thisy;
			i->releaseKey(key);
		}

		void flascc_event_keyDown(int key) {
			 // key code mapping?
			ARK2D::getInput()->pressKey(key);
		}

		void flascc_event_keyUp(int key) { 
			ARK2D::getInput()->releaseKey(key);
		}

		void flascc_event_onGamepadAttached(int gamepadIndex, string gamepadName) { 
			
		}
		void flascc_event_onGamepadButtonAttached(int gamepadIndex, int buttonId) {

		}
		void flascc_event_onGamepadAxisAttached(int gamepadIndex, int axisId, float minValue, float maxValue) {

		}
		void flascc_event_onGamepadButtonDown(int gamepadIndex, int buttonId) { 

		}
		void flascc_event_onGamepadButtonUp(int gamepadIndex, int buttonId) { 
 
		}
		void flascc_event_onGamepadAxisChanged(int gamepadIndex, int axisId, float value) {

		}
		void flascc_event_onGamepadRemoved(int gamepadIndex, string gamepadName) {

		}

		void flascc_nativeCallbackById(int id) {
			ARK2D::getLog()->v("flascc native callback by id"); 
			Callbacks::invoke((unsigned int) id); 
		}

	#endif

#endif
