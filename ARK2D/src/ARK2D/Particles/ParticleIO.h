/*
 * ParticleIO.h
 *
 *  Created on: 16 Apr 2011
 *      Author: Ashley
 */

#ifndef PARTICLEIO_H_
#define PARTICLEIO_H_

#include "../Namespaces.h"
 #include "../Common/DLL.h"
#include "../Util/Range.h"

#include "../vendor/tinyxml/tinyxml.h"

#include <string>
using std::string;

namespace ARK {
	namespace Particles {

	class ParticleSystem;
	class ConfigurableEmitter;
	class Value;

		/*!
		 * \brief The way to read particle systems from files generated by Pedigree Particle Editor.
		 *
		 * Adapted from Kevin Glass's Java implementation.
		 *
		 * @author Ashley Gwinnell <info@ashleygwinnell.co.uk>
		 * @author Kevin Glass
		 */
		class ARK2D_API ParticleIO {
			public:
				static ParticleSystem* loadConfiguredSystem(string ref);
				static ParticleSystem* loadConfiguredSystem(string ref, const Color& mask);

			private:
				static void elementToEmitter(ConfigurableEmitter* emitter, TiXmlElement* element);

				static void parseValueElement(TiXmlElement* element, Value* value);

				template <class T>
				static void parseRangeElement(TiXmlElement* element, Range<T>* range);
		};
	}
}

#endif /* PARTICLEIO_H_ */
