04:25 15/01/2010
- Fixed issue with BMP's being loaded in as RGB instead of BGR.
- Fixed issue with textures not being unbound after use/drawing shapes.
- Fixed Image.getSubImage implementation. Need to add in a way for users to set clamping, repeating, etc.
- Started porting AngelCodeFont from Slick into Giga.

20:27 25/02/2010
- Added in an average time delta system for smoother deltas.

00:19 21/04/2010
- Added Game Timer object.
- Added support for OGG sounds.
- Fixed issue where GL Viewport was not being set at the correct size due to window borders.
- Font rendering with BMFont.
- Changed many methods to const methods and many pointerss to const references.

03:37 24/04/2010
- Added Rotation functionality: Image.rotate(), Image.setRotation(), Image.setCenterOfRotation(), Graphics.rotate(), Graphics.translate().
- Added Cast functionality: Cast.toString<T>(), Cast.fromString<T>().
- Started working on reading TilED Maps in, using TinyXML.
- Attempted first template for printing contents of a std::vector, and failed.

14:37 24/04/2010
- Added support for (only) external Tilesets.
- Stuck with GZIP Decompression for Map data.

23:00 27/04/2010
- StringUtil::file_get_contents(const char* file) to return the textual data in a file.
- Support for GLSL Shaders using the Shader object, compiled at runtime.
- Colour masking for BMP Images on initialisation (they must still be a multiple of 2).
- You may now retrieve global mouse coordinates. Input.getGlobalMouseX();
- Added an new default font "calibri" no aliasing with black outline.
- You can now create colours with 24 bit hex codes like #FF00FF.

20:08 24/05/2010
- Added "GigaRectangle" class.
- Added basic method to Input for retrieving the current Mouse position.

00:40 25/05/2010
- Fixed inaccuracy with mouse position. value is now updated on each move instead of when polled.
- Added in MathUtil which contains an angle(x1,y1,x2,y2) method which i used on the squares in LMT!

00:51 27/05/2010
- Added in support for UIButton and UISimpleButton. Added Event class used for the button.
- Fix to Font.getStringHeight() not taking into account the Y Offset value.

00:07 31/05/2010
- Fix weird window/glViewport issue with glPushMatrix and glPopMatrix.
- Added State for the menu.
- Font now contains a pointer to "default font".
- GameContainer.getGraphics() now returns a pointer instead of a const reference.
- Added Event class and DefaultEvent class to work with events on the UIButton.
- Added method Font : drawStringCentered(str, lx, rx, y);

00:54 31/05/2010
- Added Input.isKeyPressed(int key)! It works nice! YAY.
- Added two Menu Sounds.

13:50 31/05/2010
- Added Sound.isPlaying();

22:17 31/05/2010
- Added in basic Timeline classes: Timeline, AnimationEvent, StaticEvent, TweenedEvent.
- Static Events work (independent).

00:46 16/06/2010
- Finished off LINEAR interpolation in Timelines.
- Added MathUtil::toRadians(double angle_degrees);

15:48 17/06/2010
- Added Graphics::setDrawColor(int r, int g, int b, int a).

22:00 18/06/2010
- Added wrap_oal.dll to the release folder which makes sound work without an OpenAL installation.
- Replaced a bunch of const references for pointers -- for ease of development!

20:30 19/06/2010
- Added ARK.h to include all Engine material.

18:19 20/06/2010
- Reorganised file structure - put all ARK2D files into directory.

20:37 05/07/2010
- Added Image.getScaledCopy(int x, int y)

19:55 09/07/2010
- Added Image.getFlippedCopy(bool h, bool v);
- Added GigaRectangle.getBounds();
- Added GigaRectangle.s_collides(); static method.

20:45 11/07/2010
- Trying to work out GZIP/deflate compression on TilED Maps.
- Added Game States to engine.

23:12 27/07/2010
- Added Sound::getVolume() and Sound::setVolume(float f);

17:36 31/07/2010
- Added Graphics::setLineWidth(unsigned int i);
- Added Graphics::getLineWidth();

23:11 31/07/2010
- Added SpriteSheetDescription class and SpriteSheetDescriptionItem class.

20:42 01/08/2010
- Added State Transitions: Transition, EmptyTransition, TranslateXTransition.
- Refactored State classes into subfolder: ARK2D_state

20:21 16/08/2010
- Added Easing::ease() for awesome velocity curves!
- Added a global game Timeline in Game class.

21:57 17/08/2010
- Added Transition easing.
- Added Timeline.removeKeyedTimelineEvent();

13:17 12/09/2010
- Added Path and PathPoint and PathLoader to ARK2D Engine.

22:33 21/09/2010
- I did so much, and it's not documented. FML.
- Path & PathLoader fixes.
- Path Movement in tutorial enemy.
- Added Sound::setPanning(float f)

17:14 25/09/2010
- Added Timeline->clear();

17:15 17/10/2010
- Yay for out-dated log.
- Graphics::drawStringWrapAround implemented.
- More refactorings.
- Added Timeline::count()
- Added Timeline::countRunning();
- Added Path caching, kinda.

22:56 27/10/2010
= Added Font.getImage();

22:17 10/11/2010
- Added Gamepad support -- buttons and dpad.

13:35 13/11/2010
- Created game OH MY GROWTH!
- Added GigaRectangleF
- Added Image.setWidth() and Image.setHeight().
- Added Vector2D.setX() and Vector2D.setY().

23:53 15/12/2010
- Sometime between now and the last log update. I templatised the Vector2D class.

23:36 17/01/2011
- Installed and set up Mercurial.
- Split projects into ARK2D and LOVE ME TOO.

23:40 02/02/2011
- Added GigaRectangle::s_collidesSide() to return SIDE_TOP, SIDE_LEFT, SIDE_RIGHT, SIDE_BOTTOM or SIDE_NONE.

23:53 03/02/2011
- Sorted out the window clipping mouse on open issue

20:19 07/06/2011
- Added Graphics::drawRoundedRect();
- So much stuff.
- Started using Github.
- Created "Examples & Tests" folder for projects using ARK2D. e.g. demos, examples and default source code projects.
- Created "Default Game" and "Default Game (State Based)" examples.

17:23 11/06/2011
- Fixed fullscreen mode.
- Added Hot Cross Bunions (with Arcade edition)

23:02 22/06/2011
- Animation::getFrame();

21:47 23/06/2011
- Started writing a simple Python build system.

00:31 28/06/2011
- Modified simple Python build system to only compile source files that have changed since the last compilation.

00:26 29/06/2011
- Modified simple Python build system to compile games - see Default Game project.

23:38 04/07/2011
- Fixed a bug where ordinary polygons or most things in the Graphics class would not work unless drawing a string or image to the screen.
	- On loading an image as a texture, it was not unbinding the texture.
- Fixed dll build script issue.

21:28 05/07/2011
- Moved Easing in to it's won cpp and h file.
- Added Path, PathGroup and SubPath to ARK2D. PathLoader was removed as it was deprecated anyway.
- Moved PI constant from Timeline to MathUtil. 
- Added "virtual" keyword to Image destructor.
- Modified Eclipse project to use the build_release folder.

20:53 08/07/2011
- Working on TextField and basic UI components.
- Added bool GigaRectangle::s_contains(x, y, w, h, x2, y2);
- Input::getKeyChar(int key) gets caps and shifted keys and stuff - whew. No Unicode support or anything, though.

23:41 09/07/2011
- TextField work:
 - insert/remove characters from cursor/caret position (including delete key, not just backspace).
 - using keyboard to select text: holding shift and using arrow keys.
 - text alignment y
- BMFont::getLineHeight() function.
- Button class started.
 - Game::mouseMoved(int x, int y, int oldx, int oldy) added.
- Not compatible with previous dlls.
- Added Color::cyan.
- Fixed font loading bug where it would attempt to load Character IDs above ASCII range (array index out of bounds, essentially)
- Added Default font (PF Tempesta Condensed) which now loads from data/fonts/default.fnt. Update your games, bitches!

11:08 10/07/2011
- Added Graphics::scissor(x,y,w,h);
- Added Graphics::setScissorTestEnabled(bool b);
- Added Panel class.
- Added Event to Button class. (using void* pointer)
- Added PathIO class to load a path from a file.
- Path editor work!
- Made window show in center of screen properly.
- Added Graphics::viewport(x,y,w,h);
- GameContainer::setResizable(bool b) fix.
 - It did not update m_width and m_height.

21:14 11/07/2011
- Fixed PathIO::createFromFile() bug. It should have returned NULL if the file did not exist.
- Added OpenFileDialog class - will need to refactor for saving file.
- Added body of function PathIO::getAsJson(PathGroup* g).
- Added functionality for Loading and saving files.
- Fixed Bug in PathGroup where timer would increment over duration.
- Added string Easing::getByInt(int);

20:50 15/07/2011
- Flips to ARK2D Path Editor.

14:16 17/07/2011
- Rotate 90 degrees to ARK2D Path Editor.

15:49 18/07/2011
- Drawing the curve for the path editor.
- New .dll.

22:59 19/07/2011
- Moved Vector4<int> padding from TextField to AbstractUIComponent.
- Added Vector4<int> margin to AbstractUIComponent.
- Added Clipping to AbstractUIComponents.
- Added ScrollPanel?
- Added int AbstractUIComponent::getOnScreenX() and getOnScreenY();
- Modified Button callback to support non-static functions.
- Other misc changes.
- New .dll - will break older builds.

21:19 21/07/2011
- Added Image to Button class with setImage() method.
- Panel border bool - todo replace with function pointer or border class.
- New .dll.

12:17 22/07/2011
- Moved Tiled classes in to a Tiled folder.

13:09 23/07/2011
- Panel::setVisible();
- PathGroup::setRelative(bool b);
 - sets the location to be relative to the first point in the path when "get location".
- Added FileUtil::getCurrentDirectory();
- Added FileUtil::getSeparator();
- Added AbstractUIComponent::isVisible();

17:11 24/07/2011
- Released LMT Wave Editor and ARK2D Wave Editor.
- Added MathUtil::snap(int snap, int x, int y);
- Added libfreetype support with FTFont class.

23:58 25/07/2011
- Added PathGroup::flip(bool hf, bool vf)
- Added PathGroup::flip(bool hf, bool vf, int cx, int cy);
- Added PathGroup::rotate(float degrees)
- Added PathGroup::rotate(float degrees, int cx, int cy);
- Added FileUtil::getOSDirectory();

00:27 28/07/2011
- Added ARK2D_windres.rc and changed build system to support it.
- Added GameContainerPlatform::getARK2DResource(resource, resource_type) to fetch resource from dll file (TODO: other os equivilent)

02:06 30/07/2011
- Added icons to Path Editor and Wave Editors.

19:39 30/07/2011
- Added load Image (PNG only) from data.
- Added load BMFont from data.
- No longer need to include fonts with DLL. :D

19:03 31/07/2011
- Added basics of level editor in to wave editor.

22:59 01/08/2011
- More work on level editor.
- Fix bug where StateBasedGame would not work if enterState() was not explicitly called in initStates().

22:34 11/08/2011
- Big updates to Mac OS X (.app) build.
- Can now compile and run the Default Game (State Based) on Mac OS X. Huzzah!

12:42 12/08/2011
- Mac OS X mouse was inverted.
- Mouse dragged events weren't working.
- FileDialog open, save, error added for Mac OS X.
- Mac OS X: Keyboard working. However it does not ask the OS for the character based on keyboard state, it's using the VK lookup table.

16:10 13/08/2011
- Hot Cross Bunions for Mac OS X.
- LocalHighscores class fix to put data inside the .app.
- Spritesheet class to accept String constructor.
- Misc fixes.

TODO:
- Add "clean" target to build system.
- Load FTFont from data.
- TextField work:
 - use mouse to select text.
 - use mouse to select cursor/caret position.
 - use keyboard to select text.
  - using control-shift left.
- Change all "int" to int32_t and unsigned int to uint32_t.
- Cast::toString<bool> should return "true" and "false" instead of 0 and 1.
- Alter Transitions so that enter() is called before render() - this should mostly deprecate the use of manual initFromState()s.
- Add Math / Triangulation classes.
- Draw Mouse image at screen refresh rate instead of per-update-render-cycle for smooth mouse rendering.
- Functionality for Gamepad Analog sticks and Triggers.
- Functionality for when a Gamepad is plugged in after the game is started.
- Functionality for mapping Gamepad keys directly to keyboard keys for quick testing and somewhat cleaner code.
- Standardise MathUtil::angle to start from right and go clockwise.
-- Means Image rotation standard should be 270 or -90.